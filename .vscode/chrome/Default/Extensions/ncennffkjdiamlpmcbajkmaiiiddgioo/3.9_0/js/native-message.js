NativeMessage.prototype={onNativeMessage:function(t){var e=t.callbackId;if(e){var n=this.callbackMap[e];if(n){n.f.apply(n.o,[true,t.result,t.paramters]);this.callbackMap[e]=undefined}}},onDisconnect:function(){if(!this.selfQuit){this.nativePort=null}this.eventContainer.fireEvent("OnDisconnect",this.selfQuit)},attachConnectEvent:function(t,e){this.eventContainer.attachEvent(t,"OnConnect",e)},attachDisconnectEvent:function(t,e){this.eventContainer.attachEvent(t,"OnDisconnect",e)},attachNativeMessage:function(t,e){this.eventContainer.attachEvent(t,"OnNativeMessage",e)},postMessage:function(t,e,n,i){if(this.nativePort!=null){var a=undefined;if(i){a=this.callbackIdIndex++}var s={funcName:t,paramters:e,callbackId:a};this.nativePort.postMessage(s);if(i){this.callbackMap[a]={o:n,f:i}}}else{console.error("postMessage failed! funcName: ",t,", parameters: ",e);if(i){i.apply(n,[false])}}},sendQuit:function(){if(this.nativePort){this.selfQuit=true;this.postMessage("ChromeQuit",[]);this.nativePort=null}},connect:function(){var t=false;do{if(this.nativePort){t=true;break}var e="com.xunlei.thunder";this.nativePort=chrome.runtime.connectNative(e);if(this.nativePort==null){console.error("connect failed!");this.eventContainer.fireEvent("OnConnect",false);break}var n=this;this.nativePort.onMessage.addListener(function(t){n.onNativeMessage(t)});this.nativePort.onDisconnect.addListener(function(){n.onDisconnect()});this.eventContainer.fireEvent("OnConnect",true);t=true}while(false);return t}};function NativeMessage(){this.nativePort=null;this.eventContainer=new EventContainer;this.selfQuit=false;this.callbackMap={};this.callbackIdIndex=1}var XLNativeMessage=new NativeMessage;